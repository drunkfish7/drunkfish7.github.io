[{"title":"群晖搭建静态个人博客","url":"/docker_hexo/","content":"\n[Hexo](https://hexo.io/) 是 [tommy351](https://zespia.tw/) 开发的静态网页生成工具，基于 node.js，、支持 Markdown，可托管至 [Github Page](https://pages.github.com/)。\n\n群晖外网访问及备份非常方便，小弟尝试用群晖搭建 Hexo，将生成的静态页面部署至 Github Pages，折腾如下：\n\n## GitHub 创建 Github Pages\n\n登录 [Github](https://github.com/) ，在任意页面右上角点击「＋」，选择「新建仓库」。\n\n![github_new](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/github_new.png)\n\n之后填入名称，包括用户名及后缀 .github.io，等待建好仓库。\n\n![github_repo](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/github_repo.png)\n\n浏览器访问地址 https://<username>.github.io 就可以看到新建的网页。此时已经建好了一个博客，这个博客基于 [Jekyll](https://www.jekyll.com.cn/) ，我们要搭建 Hexo 还要继续。\n\n注意：个人主页前缀要和 GitHub 用户名一致，只能有一个，若要建立多个，可建立项目主页，具体参见[官方文档](https://help.github.com/en/github/working-with-github-pages/about-github-pages)。\n\n## 安装 Hexo\n\n### Docker 安装 Hexo\n\n打开群晖 Docker（未安装可在「套件中心」搜索 docker 下载安装）， 在注册表中搜索「spurin」，找到映像 「spurin/hexo」并下载。这个 Docker 已经集成 [Hexo Admin Plugin](https://github.com/jaredly/hexo-admin)（一个 Hexo 文章后台管理插件）和连接 Github Pages 服务。\n\n![docker_reg](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/docker_reg.png)\n\n待下载完成后点击[启动]，选择[高级设置]，在「高级设置」中可以选择是否自动启动、是否建立桌面快捷方式（随个人偏好）。同时在「卷」在路径中添加文件夹，此文件夹为放置 Hexo 文件的文件夹，路径为 /app 。在「网络」中可以选「与宿主使用相同网络」，也可以到「端口设置」中自定义端口号。Hexo 会使用 4000 端口号。\n\n![docker_dir](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/docker_dir.png)\n\n在「环境」中可以填入自己的 Github 用户名及邮箱，以便生成有效的 SSH Key。\n\n![docker_env](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/docker_env.png)\n\n等待容器运行，打开容器详情，待安装完成，出现安装完成提示后，在浏览器中打开 http(s)://群晖 ip:4000，可以看到 Hexo 生成的网站。 访问http(s)://群晖 ip:4000/admin，可以看到文章后台管理页面。\n\n![hexo_admin](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/hexo_admin.png)\n\n### 连接 Github Pages\n\n安装完成在日志或终端机中复制生成的 SSH Key（或查看 .ssh/id_rsa.pub 这个文件）。之后打开 Github，打开个人设置，找到「SSH and gpg keys」，新建一个密钥，将密钥粘贴。\n\n![github_key](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/github_key.png)\n\n在容器终端中输入 `ssh -T git@github.com`，若可以看到自己的 Github 用户名，证明连接成功。\n\n![key_test](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/key_test.png)\n\n### 配置 Hexo Admin 插件\nHexo Admin 这个插件已经年久失修，最近一次更新是几年前了，小弟使用时踩了不少坑，下面只示范正确的步骤：\n\n1. 安装 hexo-deployer-git 插件，在容器终端输入命令 `npm install hexo-deployer-git --save`\n2. 在自定义的 Hexo 路径下新建脚本文件 hexo-deploy.sh，内容如下：\n\n``` bash\nhexo g\nhexo d\n```\n3. 配置文件 _config.yml 下添加以下：\n\n``` yml\ndeploy:\n  type: git\n  repo: git@github.com:<username>/d<username>.github.io.git\n  branch: master\n\nadmin:\n  deployCommand: './hexo-deploy.sh'\n```\n\n配置完成可以 `hexo d` 重新生成页面，Command+Shift+r 或 Ctrl+F5 强制刷新页面，点击[deploy]部署至 Github Pages，若未报错说明插件配置成功，打开 https://<username>github.io 可以看到 Hexo 生成的页面。\n\n注意：注意 yml 文件格式规范，名称后面有空格。\n\n4. 设置密码\n\n插件支持设置密码，相应页面设置密码即可。\n\n5. 设置外网访问\n为了可以随时随地发布博客，需要设置暴露 4000 端口便于外网访问。家用群晖外网访问简单的办法有：1、公网 IP + 路由器映射端口；2、利用群晖自带 DDNS。\n\n## 绑定域名\n### 购买域名\n购买域名可以去 [domcomp](https://www.domcomp.com) 先比较下价格，另外也可以到 [Google Domains](https://domains.google) 购买。\n### 域名商设置\n不同域名商设置不完全相同，小弟是从 [gandi.net](https://www.gandi.net) 买的，新增一条 ALIAS 的 DNS 记录即可。\n\n![domain_alias](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/domain_alias.png)\n\n### Github Pages 设定\nGithub Pages 设定很简单，在仓库设置中直接填入域名即可，另外建议勾选「强制 https」，这样访问域名就可以看到安心的绿色小锁。\n\n![page_domain](https://raw.githubusercontent.com/drunkfish7/pic/master/uPic/page_domain.png)\n\n设置完成之后可能要过几分钟才能可以使 DNS 生效，另外可以使用命令 dig <your domain> +nostats +nocomments +nocmd 验证是否绑定成功。\n\n遇到问题可以咨询域名服务商和查阅 Github Pages 域名相关[官方文档](https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site)\n\n## 配置相关\n\nHexo 的设置可以在 _config.yml 这个文件下修改，下面贴一下主要的配置项：\n\n### 配置主题\n\n小弟发现 [casper](https://github.com/xzhih/hexo-theme-casper) 主题不错，安装配置可移步[作者](https://zhih.me/hexo-casper-usage/)博客。\n几个注意的点：\n\n1. 注册 leancloud 可以用[国际版](https://console.leancloud.app/login.html#/signin)地址注册。免实名认证（需提供国内手机号）\n2. 在 Google Analysis 设置中点击[新增账户]可以新增一个账户，找到追踪 ID 填入即可。\n\n### 增加 RSS 支持\n\n增加 RSS 支持需要安装 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) 插件。\n\n首先在容器终端中输入命令`npm install hexo-generator-feed`\n\n之后在 Hexo 配置文件 _config.yml 文件中增加以下配置即可：\n\n```yml\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 20\n  hub:\n  content:\n  content_limit: 140\n  content_limit_delim: ' '\n  order_by: -date\n  icon: icon.png\n  autodiscovery: true\n  template:\n```\n\n### 文章命名自定义\n\nHexo 默认文章链接以文章日期命名，想修改文章链接可以参考[官方文档](https://hexo.io/docs/permalinks.html)。\n\n## 撰写文章\n\n### 书写工具\n\n可以直接打开 http(s)://群晖 ip:4000 在线用 [Markdown](https://markdown.tw/) 撰写文章，支持实时保存、预览，另外可以使用任意支持 Markdown 的书写工具书写，如 [Typora](http://typora.io)（支持实时预览、实用小功能）。\n\n图床推荐放在 Github 仓库，稳定、够用（[最大容量](https://help.github.com/cn/github/managing-large-files/what-is-my-disk-quota) 可到100G），推荐使用图床工具上传，如 [uPic](https://blog.svend.cc/upic/)(支持拖拽上传、上传完成后自动复制文件链接等等)、[PicGo](https://github.com/Molunerfinn/PicGo) (多平台、支持[插件](https://github.com/PicGo/Awesome-PicGo))\n\n### 页面属性\n\nmd 文件会存放在 /source/posts 这个路径下，生成的页面在路径 /public，文章用 Markdown 书写，语法参考[这个](https://markdown.tw/)，每篇文章可以加入页面属性：\n\n```md\n---\ntitle: {{ title }}   # 文章标题\ndate: {{ date }}     # 文章日期\ntags:                # 文章标签\ncover_img:           # 在文章摘要上显示\nfeature_img:         # 在文章详细页面上置顶\n---\n```\n\n至此我们的博客就搭建好了，通过访问  http(s)://群晖 ip:4000  就可以随时随地撰写、发布文章了。\n\n\n","tags":["hexo,synology,docker"]}]